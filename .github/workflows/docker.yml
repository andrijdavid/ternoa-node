name: docker-build

on:
  push:
    branches:
      - 'main'
  schedule:
    - cron: "0 0 * * *"
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest ternoa release
        id: ternoa
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          repo: capsule-corp-ternoa/ternoa-node 
          draft: false
          prerelease: true
          latest: true

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
          
      - name: Check image tag exists
        id: image_exists
        continue-on-error: true 
        uses: cloudposse/github-action-docker-image-exists@main
        with:
            registry: quay.io
            organization: andrijdavid
            repository: ternoa-node
            login: ${{ secrets.QUAYIO_USERNAME }}
            password: ${{ secrets.QUAYIO_TOKEN }}
            tag: ${{ steps.ternoa.outputs.tag_name }}

      - name: Set up QEMU
        if: steps.image_exists.outcome != 'success'
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        if: steps.image_exists.outcome != 'success'
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        if: steps.image_exists.outcome != 'success'
        uses: docker/build-push-action@v5
        with:
          push: true
          load: true
          sbom: true
          platforms: linux/amd64
          tags: quay.io/andrijdavid/ternoa-node:latest, quay.io/andrijdavid/ternoa-node:${{ steps.ternoa.outputs.tag_name }}
          build-args: |
            VER=${{ steps.ternoa.outputs.tag_name }}

      - name: Run Snyk to check Docker image for vulnerabilities
        if: steps.image_exists.outcome != 'success'
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: quay.io/andrijdavid/ternoa-node:latest
          args: --file=Dockerfile --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        if: steps.image_exists.outcome != 'success'
        with:
          sarif_file: snyk.sarif

      
